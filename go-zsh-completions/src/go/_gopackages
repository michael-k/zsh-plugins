#compdef gopackages

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2018, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# golang.org/x/tools/packages/gopackages
#
# -----------------------------------------------------------------------------
#
# Usage: gopackages [-deps] [-cgo] [-mode=...] [-private] package...
#
# The gopackages command loads, parses, type-checks,
# and prints one or more Go packages.
#
# Packages are specified using the notation of "go list",
# or other underlying build system.
#
# Flags:
#   -cpuprofile string
#     	write CPU profile to this file
#   -deps
#     	show dependencies too
#   -json
#     	print package in JSON form
#   -memprofile string
#     	write memory profile to this file
#   -mode string
#     	mode (one of files, imports, types, syntax, allsyntax) (default "imports")
#   -private
#     	show non-exported declarations too
#   -test
#     	include any tests implied by the patterns
#   -trace string
#     	write trace log to this file
#
# -----------------------------------------------------------------------------

function _gopackages() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _go_files() {
    _files -g "*.go(-.)"
  }

  _go_packages() {
    local -a gopaths
    gopaths=("${(s/:/)$(go env GOPATH)}")
    gopaths+=("$(go env GOROOT)")
    for p in $gopaths; do
      _alternative ':go packages:_path_files -W "$p/src" -/'
    done
    _alternative '*:go file:_go_files'
  }

  _arguments -C \
    '-cpuprofile=[write CPU profile to this file]:output file:_files' \
    '-deps[show dependencies too]' \
    '-json[print package in JSON form]' \
    '-memprofile=[write memory profile to this file]:output file:_files' \
    '-mode=[mode (default "metadata")]:mode:(files imports types syntax allsyntax)' \
    '-private[show non-exported declarations too]' \
    '-test[include any tests implied by the patterns]' \
    '-trace=[write trace log to this file]:output file:_files' \
    '*: :_go_packages' \
    && ret=0

  return ret
}

_gopackages "$*"

# vim:ft=zsh:et:sts=2:sw=2
